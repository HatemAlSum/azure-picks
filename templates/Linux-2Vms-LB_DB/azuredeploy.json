{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dns_name": {
            "defaultValue": "c9lnxenv",
            "type": "string",
            "metadata": {
                "description": "DNS for Load Balancer IP"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username on all VMs"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password on all VMs"
            }
        },
        "availabilitySet_name": {
            "defaultValue": "C9AS",
            "type": "string",
            "metadata": {
                "description": "Name of Availability Set"
            }
        },
        "VM_dbserver_name": {
            "defaultValue": "c9-dbserver",
            "type": "string",
            "metadata": {
                "description": "Database Node Name"
            }
        },
        "VM_webserver1_name": {
            "defaultValue": "c9-webserver1",
            "type": "string",
            "metadata": {
                "description": "Name of first Web Node"
            }
        },
        "VM_webserver2_name": {
            "defaultValue": "c9-webserver2",
            "type": "string",
            "metadata": {
                "description": "Name of second Web Node"
            }
        },
        "loadBalancers_name": {
            "defaultValue": "C9-LB",
            "type": "string",
            "metadata": {
                "description": "Name of Load Balancer"
            }
        },
        "networkSecurityGroup_name": {
            "defaultValue": "C9-NSG",
            "type": "string",
            "metadata": {
                "description": "Name of Network Security Group"
            }
        },
        "virtualNetwork_name": {
            "defaultValue": "c9VNet",
            "type": "string",
            "metadata": {
                "description": "Name of VirtualNetwork"
            }
        },
        "storageAccount_name": {
            "defaultValue": "c9testsa",
            "type": "string",
            "metadata": {
                "description": "Name of Storage Account"
            }
        }
    },
    "variables": {
        "addressPrefix": "192.168.1.0/16",
        "subnetPrefix": "192.168.1.0/24",
        "storageAccountType": "Standard_LRS",
        "location": "[resourceGroup().location]",
        "osType": {
            "publisher": "OpenLogic",
            "offer": "CentOs",
            "sku": "7.2",
            "version": "latest"
        },
        "imageReference": "[variables('osType')]",
        "dbserver_NIC_name": "[concat(parameters('VM_dbserver_name'),'NIC')]",
        "webserver1_NIC_name": "[concat(parameters('VM_webserver1_name'),'NIC')]",
        "webserver2_NIC_name": "[concat(parameters('VM_webserver2_name'),'NIC')]",
        "publicIPAddresse_name": "[concat(parameters('loadBalancers_name'),'-PIP')]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancers_name'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LBFE')]",
        "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/LBBE')]",
        "lbProbeID": "[concat(variables('lbID'),'/probes/http-probe')]",
        "computeApiVersion": "2016-03-30",
        "networkApiVersion": "2016-03-30",
        "storageApiVersion": "2015-06-15"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccount_name')]",
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySet_name')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 3
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddresse_name')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dns_name')]"
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetwork_name')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "SubNet1",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('networkSecurityGroup_name')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "securityRules": [
                    {
                        "name": "webserver1-ssh-ns",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "192.168.1.4",
                            "access": "Allow",
                            "priority": 3122,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "webserver2-ssh-ns",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "192.168.1.5",
                            "access": "Allow",
                            "priority": 3222,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "dbserver-ssh-ns",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "192.168.1.6",
                            "access": "Allow",
                            "priority": 3322,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "webserver-http",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 1080,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "dbserver-http-ns",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "192.168.1.5",
                            "access": "Allow",
                            "priority": 3080,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "dbserver-mysql",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "65222",
                            "destinationPortRange": "3306",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "192.168.1.5",
                            "access": "Allow",
                            "priority": 3306,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "webserver-https",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[parameters('loadBalancers_name')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LBFE",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresse_name'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LBBE"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "lb-http-rule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "loadDistribution": "SourceIPProtocol",
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "http-probe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 10,
                            "numberOfProbes": 5
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "webserver1-ssh-nr",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "frontendPort": 65122,
                            "backendPort": 22,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "webserver2-ssh-nr",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "frontendPort": 65222,
                            "backendPort": 22,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "dbserver-ssh-nr",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "frontendPort": 65322,
                            "backendPort": 22,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "dbserver-phpmyadmin-nr",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "frontendPort": 8080,
                            "backendPort": 443,
                            "protocol": "Tcp"
                        }
                    }
                ],
                "outboundNatRules": [],
                "inboundNatPools": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresse_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('dbserver_NIC_name')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "192.168.1.10",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_name')), '/subnets/SubNet1')]"
                            },
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')), '/inboundNatRules/dbserver-ssh-nr')]"
                                },
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')), '/inboundNatRules/dbserver-phpmyadmin-nr')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('webserver1_NIC_name')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "192.168.1.4",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_name')), '/subnets/SubNet1')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('lbPoolID')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')), '/inboundNatRules/webserver1-ssh-nr')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('webserver2_NIC_name')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "192.168.1.5",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_name')), '/subnets/SubNet1')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('lbPoolID')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')), '/inboundNatRules/webserver2-ssh-nr')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('VM_dbserver_name')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[concat(parameters('VM_dbserver_name'),'OSDisk')]",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat('https', '://', parameters('storageAccount_name'), '.blob.core.windows.net', concat('/vhds/', parameters('VM_dbserver_name'),'OSDisk.vhd'))]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(parameters('VM_dbserver_name'),'-dbDisK')]",
                            "createOption": "Empty",
                            "vhd": {
                                "uri": "[concat('https', '://', parameters('storageAccount_name'), '.blob.core.windows.net', concat('/vhds/', parameters('VM_dbserver_name'),'-dbDisK.vhd'))]"
                            },
                            "caching": "None",
                            "diskSizeGB": 512
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('VM_dbserver_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    },
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('dbserver_NIC_name'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet_name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('dbserver_NIC_name'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('VM_webserver1_name')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[concat(parameters('VM_webserver1_name'),'OSDisk')]",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat('https', '://', parameters('storageAccount_name'), '.blob.core.windows.net', concat('/vhds/', parameters('VM_webserver1_name'),'OSDisk.vhd'))]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('VM_webserver1_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    },
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('webserver1_NIC_name'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet_name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('webserver1_NIC_name'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('VM_webserver2_name')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[concat(parameters('VM_webserver2_name'),'OSDisk')]",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat('https', '://', parameters('storageAccount_name'), '.blob.core.windows.net', concat('/vhds/', parameters('VM_webserver2_name'),'OSDisk.vhd'))]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('VM_webserver2_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    },
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('webserver2_NIC_name'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet_name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('webserver2_NIC_name'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('VM_webserver1_name'),'/installapache')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('VM_webserver1_name'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/HatemAlSum/azure-picks/master/templates/Linux-2Vms-LB_DB/installserver.sh"
                    ],
                    "commandToExecute": "bash installserver.sh"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('VM_webserver2_name'),'/installapache')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('VM_webserver2_name'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/HatemAlSum/azure-picks/master/templates/Linux-2Vms-LB_DB/installserver.sh"
                    ],
                    "commandToExecute": "bash installserver.sh"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('VM_dbserver_name'),'/installphpmyadmin_mysql')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('VM_dbserver_name'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/HatemAlSum/azure-picks/master/templates/Linux-2Vms-LB_DB/installserver.sh",
                        "https://raw.githubusercontent.com/HatemAlSum/azure-picks/master/templates/Linux-2Vms-LB_DB/installdbserver.sh"
                    ],
                    "commandToExecute": "bash installserver.sh ; bash installdbserver.sh"
                }
            }
        }
    ]
}